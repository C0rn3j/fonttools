name: Build + Deploy

on:
  push:
    tags: ["*.*.*"]
  release:
    types:
      - published
  # enables workflow to be run manually
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:

env:
  # skip binary wheels for pypy (preferable to use pure-python) and 32-bit Linux
  CIBW_SKIP: pp* cp*linux_i686
  CIBW_ENVIRONMENT: FONTTOOLS_WITH_CYTHON=1
  CIBW_TEST_REQUIRES: tox

jobs:

  build_wheels:
    name: ${{ matrix.type }} ${{ matrix.arch }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        arch: [auto64]
        tox_env: ["py-cy"]
        include:
          # the manylinux2014 image contains ALL the python versions we support
          # use that for simplicity, and only if needed build for older manylinuxes
          - os: ubuntu-latest
            arch: auto
            type: manylinux2014
            tox_env: py-cy
            CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
            CIBW_MANYLINUX_I686_IMAGE: manylinux2014

          - os: macos-latest
            arch: universal2
            tox_env: py-cy

          - os: windows-latest
            arch: auto32
            # scipy doesn't have wheels for win32 hence run tox with 'noextra'
            tox_env: py-cy-noextra
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"
    - name: Install dependencies
      # using fork of cibuildwheel until this is fixed: https://github.com/pypa/cibuildwheel/issues/1504
      run: pip install git+https://github.com/anthrotype/cibuildwheel.git@test_command_wheel#egg=cibuildwheel

    - name: Build Wheels
      run: python -m cibuildwheel --output-dir wheelhouse .
      env:
        CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.CIBW_MANYLINUX_I686_IMAGE }}
        CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.CIBW_MANYLINUX_X86_64_IMAGE }}
        CIBW_ARCHS: ${{ matrix.arch }}
        CIBW_TEST_COMMAND: "tox -c {package}/tox.ini -e ${{ matrix.tox_env }} --installpkg {wheel}"
    - uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl

  build_arch_wheels:
    name: py${{ matrix.python }} on ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # aarch64 uses qemu so it's slow, build each py version in parallel jobs
        python: [38, 39, 310, 311]
        arch: [aarch64]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: docker/setup-qemu-action@v1.2.0
      with:
        platforms: all
    - name: Install dependencies
      # using fork of cibuildwheel until this is fixed: https://github.com/pypa/cibuildwheel/issues/1504
      run: pip install git+https://github.com/anthrotype/cibuildwheel.git@test_command_wheel#egg=cibuildwheel
    - name: Build Wheels
      run: python -m cibuildwheel --output-dir wheelhouse .
      env:
        CIBW_BUILD: cp${{ matrix.python }}-*
        CIBW_ARCHS: ${{ matrix.arch }}
    - uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl

  deploy:
    name: Upload if release
    needs: [build_wheels, build_arch_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
